function z = Ising_Energy(N_x, N_y, N_z, S, J, B, mu_1)
% Функция, возвращающая энергию данной конфигурации системы
% N_x - количество частиц по оси X
% N_y - количество частиц по оси Y
% N_z - количество частиц по оси Z
% S - матрица конфигурации системы
% J [Дж] - обменная энергия
% B [Тл] - индукция магнитного поля
% mu_1 [А * м^2] - магнитный момент одной частицы
E = 0;
for i = 1:N_x
    for j = 1:N_y
        for k = 1:N_z
            % Проверка на один "слой" по каждой переменной, после чего 
            % расчет энергии с учетом периодических граничных условий
            if (N_x ~= 1)
                E = E - J * double(S(i, j, k) * (S(mod(i, N_x) + 1, j, k) + S(mod(i - 2, N_x) + 1, j, k)));
            end
            if (N_y ~= 1)
                E = E - J * double(S(i, j, k) * (S(i, mod(j, N_y) + 1, k) + S(i, mod(j - 2, N_y) + 1, k)));
            end
            if (N_z ~= 1)
                E = E - J * double(S(i, j, k) * (S(i, j, mod(k, N_z) + 1) + S(i, j, mod(k - 2, N_z) + 1)));
            end
            
        end
    end
end
E = E / 2;
E = E - mu_1 * B * sum(S, "all");
z = E;